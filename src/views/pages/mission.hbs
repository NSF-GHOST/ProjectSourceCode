<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Add Persona</title>
    <style>
        .persona-item, .saved-persona-item {
            display: flex;
            flex-direction: column;
            margin-bottom: 10px;
            border: 1px solid #ddd;
            padding: 10px;
            border-radius: 5px;
        }

        .persona-name {
            cursor: pointer;
            font-weight: bold;
        }

        .details-container {
            display: none; /* Hide details by default */
            margin-top: 10px;
        }

        .remove-btn {
            color: red;
            cursor: pointer;
            font-weight: bold;
            align-self: flex-end;
        }

        .device-section, .persona-form {
            margin-bottom: 15px;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
        }

        .persona-form {
            margin-top: 10px;
        }

        .form-group {
            margin-bottom: 10px;
        }

        .add-device-button, .add-schedule-button, .add-button, .save-personas-button {
            margin-top: 10px;
        }
    </style>
</head>
<body> 
    {{> nav}}

    &nbsp;&nbsp;
    <div class="container">
        <h2>Create Profile</h2>
        <form id="createProfileForm">
            <div class="form-group">
                <label for="profileName">Name:</label>
                <input type="text" id="profileName" name="profileName" required>
            </div>
            <button type="button" class="create-profile-button" onclick="createProfile()">Create Profile</button>
        </form>
        <div class="profile-id-display" id="profileIdDisplay"></div>
    </div> &nbsp;
    <div class="container">
        <div class="form-container">
            <h2>Create Persona</h2>
            <form id="personaForm">
                <div class="form-group">
                    <label for="personaName">Name:</label>
                    <input type="text" id="personaName" name="personaName" required>
                </div>
                <div class="form-group">
                    <label for="personaIMEI">IMEI:</label>
                    <input type="text" id="personaIMEI" name="personaIMEI" required>
                </div>
                <div class="form-group">
                    <label for="personaSIM">simSlot:</label>
                    <select id="personaSIM" name="personaSIM" required>
                        <option value="0">0</option>
                        <option value="1">1</option>
                        <option value="2">2</option>
                        <option value="3">3</option>
                        <option value="4">4</option>
                        <option value="5">5</option>
                        <option value="6">6</option>
                        <option value="7">7</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="activityProfile">Individual Activity Profile:</label>
                    <select id="activityProfile" name="activityProfiles" required>
                        <option value="0">0</option>
                        <option value="1">1</option>
                        <option value="2">2</option>
                        <option value="3">3</option>
                        <option value="4">4</option>
                        <option value="5">5</option>
                        <option value="6">6</option>
                        <option value="7">7</option>
                    </select>
                </div>
                <button type="button" class="add-button" onclick="createPersona()">Create Persona</button>
            </form>
            &nbsp;
            <div class="saved-personas">
                <div class="saved-personas-title">Saved Personas:</div>
                <div id="savedPersonas">
                </div>
            </div>
        </div> &nbsp;
        <div class="shopping-cart">
            <div class="shopping-cart-title">Selected Personas:</div>
            <div id="cartItems">
            </div>
        </div>
    </div> &nbsp;

    <div class="container">
        <div class="form-container">
            <h2>Create Device</h2>
            <form id="deviceForm">
                <div class="form-group">
                    <label for="deviceName">Name:</label>
                    <input type="text" id="deviceName" name="deviceName" required>
                </div>
                <div class="form-group">
                    <label for="deviceOS">Operating System:</label>
                    <input type="text" id="deviceOS" name="deviceOS" required>
                </div>
                <div class="form-group">
                    <label for="deviceMan">Manufacturer:</label>
                    <input type="text" id="deviceMan" name="deviceMan" required>
                </div>
                <div class="form-group">
                    <label for="androidId">Android ID?:</label>
                    <select id="androidId" name="androidId" required>
                        <option value="0">0</option>
                        <option value="1">1</option>
                        <option value="2">2</option>
                        <option value="3">3</option>
                        <option value="4">4</option>
                        <option value="5">5</option>
                        <option value="6">6</option>
                        <option value="7">7</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="originalImei">Original IMEI:</label>
                    <input type="text" id="originalImei" name="originalImei" required>
                </div>
                <button type="button" class="add-button" onclick="createDevice()">Create Device</button>
            </form>
            &nbsp;
            <div class="saved-devices">
                <div class="saved-devices-title">Saved Devices:</div>
                <div id="savedDevicces">
                </div>
            </div>
        </div> &nbsp;
        <div class="shopping-cart">
            <div class="shopping-cart-title">Selected Devices:</div>
            <div id="cartDevices">
            </div>
        </div>
    </div> &nbsp;

    <div class="container">
        <h2>Mission Plan</h2>
        <div><strong>Plan ID:</strong> <span id="planId"></span></div>
        <button type="button" class="add-device-button" onclick="addDevice()">+ Add Device</button>
        <div id="deviceSections"></div>
        <button type="button" class="add-schedule-button" onclick="generatePlan()">Generate Plan</button>
    </div>

    <script>
        let username = '';
        fetch('/username')
            .then(response => response.json())
            .then(data => username = data.username)
            .catch(error => console.error('Error fetching username:', error));

        function generateUUID() {
            return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {
                const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);
                return v.toString(16);
            });
        }

        // create profile 
        let profileId = 0;

        function createProfile() {
            const form = document.getElementById('createProfileForm');
            const profileName = form.elements['profileName'].value;

            if (profileName.trim() !== '') {
                const payload = {
                    name: profileName,
                    metadata: {
                        createBy: username,
                        created: new Date().toISOString(),
                        modifiedBy: "string",
                        modified: new Date().toISOString()
                    }
                };

                console.log('Payload:', JSON.stringify(payload));

                profileId = 0; // fixed right now
                document.getElementById('profileIdDisplay').innerText = `Profile ID: ${profileId}`;

                console.log(`Profile created with ID: ${profileId} and Name: ${profileName}`);
            } else {
                alert('Please enter a valid profile name.');
            }
        }

        // create persona
        const personas = [];
        const savedPersonas = [];

        function createPersona() {
            const form = document.getElementById('personaForm');
            const name = form.elements['personaName'].value;
            const sim = form.elements['personaSIM'].value;
            const imei = form.elements['personaIMEI'].value;
            const activityProfile = form.elements['activityProfile'].value;

                const payload = {
                    assignedIMEI: imei,
                    simCardInformation: {
                        bankId: 1,
                        simSlot: sim
                    },
                    activityProfileId: activityProfile,
                    metadata: {
                        createBy: username,
                        created: new Date().toISOString(),
                        modifiedBy: "string",
                        modified: new Date().toISOString()
                    }
                };

                console.log('Payload:', JSON.stringify(payload));

                console.log(`Persona created with IMEI: ${imei}, simSlot: ${sim}, Activity Profile: ${activity}, and IMEI: ${imei}.`);

            
            const persona = {
                name: name,
                sim: sim,
                imei: imei,
                activity: activityProfile
            };

            if (!personas.find(p => p.name === persona.name)) {
                personas.push(persona);
                addToCart(persona);
            }

            if (!savedPersonas.find(p => p.name === persona.name)) {
                savedPersonas.push(persona);
                addToSavedProfiles(persona);
            }

            form.reset();
        }

        function addToCart(persona) {
            const personaList = document.getElementById('cartItems');
            const personaItem = document.createElement('div');
            personaItem.classList.add('persona-item');
            personaItem.innerHTML = `
                <div class="persona-name" onclick="togglePersonaDetails('${persona.name}')">${persona.name}</div>
                <div class="remove-btn" onclick="removePersona('${persona.name}')">X</div>
                <div id="details-${persona.name}" class="details-container">
                    <p><strong>IMEI:</strong> ${persona.imei}</p>
                    <p><strong>bankId:</strong> 1</p>
                    <p><strong>simSlot:</strong> ${persona.sim}</p>
                    <p><strong>Individual Activity Profile:</strong> ${persona.activity}</p>
                </div>
            `;
            personaList.appendChild(personaItem);
        }

        function addToSavedProfiles(persona) {
            const savedProfilesList = document.getElementById('savedProfiles');
            const savedPersonaItem = document.createElement('div');
            savedPersonaItem.classList.add('saved-persona-item');
            savedPersonaItem.innerHTML = `
                <div class="saved-persona-name" onclick="addSavedPersonaToCart('${persona.name}')">${persona.name}</div>
                <div class="remove-btn" onclick="removeSavedPersona('${persona.name}')">X</div>
            `;
            savedProfilesList.appendChild(savedPersonaItem);
        }

        function togglePersonaDetails(name) {
            const detailsContainer = document.getElementById(`details-${name}`);
            if (detailsContainer.style.display === 'none' || detailsContainer.style.display === '') {
                detailsContainer.style.display = 'block';
            } else {
                detailsContainer.style.display = 'none';
            }
        }

        function removePersona(name) {
            const index = personas.findIndex(persona => persona.name === name);
            if (index !== -1) {
                personas.splice(index, 1);
            }

            const personaItems = document.querySelectorAll('.persona-item');
            personaItems.forEach(item => {
                if (item.querySelector('.persona-name').textContent === name) {
                    item.remove();
                }
            });

            const detailsContainer = document.getElementById(`details-${name}`);
            if (detailsContainer) {
                detailsContainer.remove();
            }
        }

        function removeSavedPersona(name) {
            const index = savedPersonas.findIndex(persona => persona.name === name);
            if (index !== -1) {
                savedPersonas.splice(index, 1);
            }

            const savedPersonaItems = document.querySelectorAll('.saved-persona-item');
            savedPersonaItems.forEach(item => {
                if (item.querySelector('.saved-persona-name').textContent === name) {
                    item.remove();
                }
            });
        }

        function addSavedPersonaToCart(name) {
            const persona = savedPersonas.find(p => p.name === name);
            if (!personas.find(p => p.name === name)) {
                personas.push(persona);
                addToCart(persona);
            }
        }

        // create device
        const devices = [];
        const savedDevices = [];

        function createDevice() {
            const form = document.getElementById('deviceForm');
            const name = form.elements['deviceName'].value;
            const os = form.elements['deviceOS'].value;
            const manufacturer = form.elements['deviceMan'].value;
            const androidId = form.elements['androidId'].value;
            const imei = form.elements['originalImei'].value;

            if (os.trim() !== '' && manufacturer.trim() !== '' && androidId.trim() !== '' && imei.trim() !== '') {
                const payload = {
                    os: os,
                    manufacturer: manufacturer,
                    restorePoint: {
                        androidId: androidId
                    },
                    metaData: {
                        createBy: username,
                        created: new Date().toISOString(),
                        modifiedBy: "NA",
                        modifier: new Date().toISOString()
                    },
                    originalImei: imei
                };

                console.log('Payload:', JSON.stringify(payload));

                console.log(`Device created with OS: ${os}, Manufacturer: ${manufacturer}, and original IMEI ${imei}.`);

                const device = {
                    name: name,
                    os: os,
                    manufacturer: manufacturer,
                    androidId: androidId,
                    originalImei: imei
                };
                if (!devices.find(d => d.name === device.name)) {
                    devices.push(device);
                    addDeviceToCart(device);
                }
                if (!savedDevices.find(d => d.name === device.name)) {
                    savedDevices.push(devices);
                    addToSavedProfiles(devices);
                }
            } else {
                alert('Please fill in all the fields.');
            }
            form.reset();
        }

        function addDeviceToCart(device) {
            const personaList = document.getElementById('cartDevices');
            const personaItem = document.createElement('div');
            personaItem.classList.add('device-item');
            personaItem.innerHTML = `
                <div class="device-name" onclick="togglePersonaDetails('${device.name}')">${device.name}</div>
                <div class="remove-btn" onclick="removePersona('${device.name}')">X</div>
                <div id="details-${device.name}" class="details-container">
                    <p><strong>OS:</strong> ${device.os}</p>
                    <p><strong>Manufacturer:</strong> ${device.manufacturer}</p>
                    <p><strong>androidId:</strong> ${persona.androidId}</p>
                    <p><strong>originalIMEI:</strong> ${persona.originalImei}</p>
                </div>
            `;
            personaList.appendChild(personaItem);
        }

        function addToSavedDevices(device) {
            const savedProfilesList = document.getElementById('savedDevices');
            const savedPersonaItem = document.createElement('div');
            savedPersonaItem.classList.add('saved-device-item');
            savedPersonaItem.innerHTML = `
                <div class="saved-device-name" onclick="addSavedDeviceToCart('${device.name}')">${device.name}</div>
                <div class="remove-btn" onclick="removeSavedDevice('${device.name}')">X</div>
            `;
            savedProfilesList.appendChild(savedPersonaItem);
        }

        function togglePersonaDetails(name) {
            const detailsContainer = document.getElementById(`details-${name}`);
            if (detailsContainer.style.display === 'none' || detailsContainer.style.display === '') {
                detailsContainer.style.display = 'block';
            } else {
                detailsContainer.style.display = 'none';
            }
        }

        function removeDevice(name) {
            const index = devices.findIndex(device => device.name === name);
            if (index !== -1) {
                devices.splice(index, 1);
            }

            const deviceItems = document.querySelectorAll('.device-item');
            deviceItems.forEach(item => {
                if (item.querySelector('.device-name').textContent === name) {
                    item.remove();
                }
            });

            const detailsContainer = document.getElementById(`details-${name}`);
            if (detailsContainer) {
                detailsContainer.remove();
            }
        }

        function removeSavedDevices(name) {
            const index = savedDevices.findIndex(device => device.name === name);
            if (index !== -1) {
                savedDevices.splice(index, 1);
            }

            const savedDeviceItems = document.querySelectorAll('.saved-device-item');
            savedDeviceItems.forEach(item => {
                if (item.querySelector('.saved-device-name').textContent === name) {
                    item.remove();
                }
            });
        }

        function addSavedDeviceToCart(name) {
            const device = savedDevices.find(d => d.name === name);
            if (!devices.find(d => d.name === name)) {
                devices.push(device);
                addToCart(device);
            }
        }

        /*
        // summarized into createPersonas()

        async function savePersonas() {
            const personasToSave = personas.map(persona => {
                return {
                    personaID: 0,
                    assignedIMEI: persona.imei,
                    simCardInformation: {
                        bankId: 1,
                        simSlot: persona.sim
                    },
                    activityProfileId: persona.activity,
                    metadata: {
                        createBy: username,
                        created: new Date().toISOString(),
                        modifiedBy: "NA",
                        modified: new Date().toISOString()
                    }
                };
            });

            try {
                const response = await fetch('/save-personas', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(personasToSave)
                });

                if (!response.ok) {
                    throw new Error('Network response was not ok ' + response.statusText);
                }

                const result = await response.json();
                console.log(result.message);
                showAlert(personas.map(persona => persona.name));
            } catch (error) {
                console.error('Error saving personas:', error);
            }
        }
        */

        function showAlert(personaNames) {
            const message = `Personas saved successfully:\n\n${personaNames.map(name => `• ${name}`).join('\n')}`;
            alert(message);
        }
/*
        document.addEventListener('DOMContentLoaded', () => {
            fetchActivityProfiles();
        });


        async function fetchActivityProfiles() {
            try {
                const response = await fetch('/activity-profiles');
                const profiles = await response.json();
                const activityProfileSelect = document.getElementById('activityProfile');
                profiles.forEach(profile => {
                    const option = document.createElement('option');
                    option.value = profile;
                    option.textContent = profile;
                    activityProfileSelect.appendChild(option);
                });
            } catch (error) {
                console.error('Error fetching activity profiles:', error);
            }
        }
*/
        function addDevice() {
            const deviceSections = document.getElementById('deviceSections');
            const deviceId = generateUUID();
            const deviceSection = document.createElement('div');
            deviceSection.classList.add('device-section');
            deviceSection.innerHTML = `
                <div><strong>Device ID:</strong> ${deviceId}</div>
                <button type="button" class="add-button" onclick="addPersonaForm('${deviceId}')">+ Add Persona</button>
                <div id="personaFormContainer-${deviceId}"></div>
            `;
            deviceSections.appendChild(deviceSection);
        }

        function addPersonaForm(deviceId) {
            const container = document.getElementById(`personaFormContainer-${deviceId}`);
            const formId = generateUUID();
            const personaForm = document.createElement('div');
            personaForm.classList.add('persona-form');
            personaForm.id = formId;
            personaForm.innerHTML = `
                <label for="persona-${formId}">Persona:</label>
                <input type="text" id="persona-${formId}" name="persona" required>
                <label for="startTime-${formId}">Start Time:</label>
                <input type="datetime-local" id="startTime-${formId}" name="startTime" required>
                <label for="endTime-${formId}">End Time:</label>
                <input type="datetime-local" id="endTime-${formId}" name="endTime" required>
                <label for="jitter-${formId}">Jitter:</label>
                <input type="number" id="jitter-${formId}" name="jitter" required>
                <button type="button" class="remove-btn" onclick="removePersonaForm('${formId}')">Remove Persona</button>
            `;
            container.appendChild(personaForm);
        }

        function removePersonaForm(formId) {
            const form = document.getElementById(formId);
            if (form) {
                form.remove();
            }
        }

        function generatePlan() {
            const planId = generateUUID();
            document.getElementById('planId').textContent = planId;
            alert(`Plan ID: ${planId}`);
        }
    </script>
</body>
</html>
